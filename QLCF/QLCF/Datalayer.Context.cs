//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLCF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QLCFEntities : DbContext
    {
        public QLCFEntities()
            : base("name=QLCFEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BillInfo> BillInfoes { get; set; }
        public virtual DbSet<CategoryFood> CategoryFoods { get; set; }
        public virtual DbSet<Discount> Discounts { get; set; }
        public virtual DbSet<Food> Foods { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Bill> Bills { get; set; }
    
        public virtual int InsertBill(Nullable<System.DateTime> createdate, Nullable<int> card)
        {
            var createdateParameter = createdate.HasValue ?
                new ObjectParameter("createdate", createdate) :
                new ObjectParameter("createdate", typeof(System.DateTime));
    
            var cardParameter = card.HasValue ?
                new ObjectParameter("card", card) :
                new ObjectParameter("card", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertBill", createdateParameter, cardParameter);
        }
    
        public virtual int InsertBillInFo(Nullable<int> idBill, Nullable<int> idFood, Nullable<int> count)
        {
            var idBillParameter = idBill.HasValue ?
                new ObjectParameter("idBill", idBill) :
                new ObjectParameter("idBill", typeof(int));
    
            var idFoodParameter = idFood.HasValue ?
                new ObjectParameter("idFood", idFood) :
                new ObjectParameter("idFood", typeof(int));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("count", count) :
                new ObjectParameter("count", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertBillInFo", idBillParameter, idFoodParameter, countParameter);
        }
    
        public virtual ObjectResult<getfoodbyID_Result> getfoodbyID(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getfoodbyID_Result>("getfoodbyID", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> getMaxID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getMaxID");
        }
    
        public virtual ObjectResult<USP_GetListBillByDate_Result> USP_GetListBillByDate(Nullable<System.DateTime> fromDate, Nullable<System.DateTime> toDate)
        {
            var fromDateParameter = fromDate.HasValue ?
                new ObjectParameter("fromDate", fromDate) :
                new ObjectParameter("fromDate", typeof(System.DateTime));
    
            var toDateParameter = toDate.HasValue ?
                new ObjectParameter("toDate", toDate) :
                new ObjectParameter("toDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetListBillByDate_Result>("USP_GetListBillByDate", fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<USP_GetListfoodsell_Result> USP_GetListfoodsell()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_GetListfoodsell_Result>("USP_GetListfoodsell");
        }
    }
}
